/**
 * BSD 3-Clause License
 *
 * Copyright Â© 2023, Daniel Jonathan <daniel at cosmicmind dot com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its
 *    contributors may be used to endorse or promote products derived from
 *    this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES LOSS OF USE, DATA, OR PROFITS OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

@use 'sass:map';

@use './themes/material/light' as light;
@use './themes/material/dark' as dark;

$light: (
  primary: light.$primary,
  on-primary: light.$on-primary,
  primary-container: light.$primary-container,
  on-primary-container: light.$on-primary-container,
  inverse-primary: light.$inverse-primary,

  secondary: light.$secondary,
  on-secondary: light.$on-secondary,
  secondary-container: light.$secondary-container,
  on-secondary-container: light.$on-secondary-container,

  tertiary: light.$tertiary,
  on-tertiary: light.$on-tertiary,
  tertiary-container: light.$tertiary-container,
  on-tertiary-container: light.$on-tertiary-container,

  error: light.$error,
  on-error: light.$on-error,
  error-container: light.$error-container,
  on-error-container: light.$on-error-container,

  background: light.$background,
  on-background: light.$on-background,

  surface: light.$surface,
  on-surface: light.$on-surface,
  surface-variant: light.$surface-variant,
  on-surface-variant: light.$on-surface-variant,

  surface-tint: light.$surface-tint,

  inverse-surface: light.$inverse-surface,
  on-inverse-surface: light.$on-inverse-surface,

  outline: light.$outline,
  outline-variant: light.$outline-variant,

  scrim: light.$scrim,

  shadow-0: light.$shadow-0,
  shadow-1: light.$shadow-1,
  shadow-2: light.$shadow-2,
  shadow-3: light.$shadow-3,
  shadow-4: light.$shadow-4,
  shadow-5: light.$shadow-5,

  elevation-0: light.$elevation-0,
  elevation-1: light.$elevation-1,
  elevation-2: light.$elevation-2,
  elevation-3: light.$elevation-3,
  elevation-4: light.$elevation-4,
  elevation-5: light.$elevation-5,
);

$dark: (
  primary: dark.$primary,
  on-primary: dark.$on-primary,
  primary-container: dark.$primary-container,
  on-primary-container: dark.$on-primary-container,
  inverse-primary: dark.$inverse-primary,

  secondary: dark.$secondary,
  on-secondary: dark.$on-secondary,
  secondary-container: dark.$secondary-container,
  on-secondary-container: dark.$on-secondary-container,

  tertiary: dark.$tertiary,
  on-tertiary: dark.$on-tertiary,
  tertiary-container: dark.$tertiary-container,
  on-tertiary-container: dark.$on-tertiary-container,

  error: dark.$error,
  on-error: dark.$on-error,
  error-container: dark.$error-container,
  on-error-container: dark.$on-error-container,

  background: dark.$background,
  on-background: dark.$on-background,

  surface: dark.$surface,
  on-surface: dark.$on-surface,
  surface-variant: dark.$surface-variant,
  on-surface-variant: dark.$on-surface-variant,

  surface-tint: dark.$surface-tint,

  inverse-surface: dark.$inverse-surface,
  on-inverse-surface: dark.$on-inverse-surface,

  outline: dark.$outline,
  outline-variant: dark.$outline-variant,

  scrim: dark.$scrim,

  shadow-0: dark.$shadow-0,
  shadow-1: dark.$shadow-1,
  shadow-2: dark.$shadow-2,
  shadow-3: dark.$shadow-3,
  shadow-4: dark.$shadow-4,
  shadow-5: dark.$shadow-5,

  elevation-0: dark.$elevation-0,
  elevation-1: dark.$elevation-1,
  elevation-2: dark.$elevation-2,
  elevation-3: dark.$elevation-3,
  elevation-4: dark.$elevation-4,
  elevation-5: dark.$elevation-5,
);

$current: null;

@function tint($base, $color, $percentage) {
  @return mix($base, $color, $percentage);
}

@function shade($base, $color, $percentage) {
  @return mix($base, $color, $percentage);
}

@function style($key) {
  $theme: if($current == 'dark', $dark, $light);
  @return map.get($theme, $key);
}

@mixin preferred() {
  $current: 'light' !global;
  .theme-dark .theme-light &,
  .theme-light & {
    @content;
  }

  $current: 'dark' !global;
  .theme-light .theme-dark &,
  .theme-dark & {
    @content;
  }

  $current: null !global;
}

@mixin light() {
  $current: 'light' !global;
  @content;

  $current: null !global;
}

@mixin dark() {
  $current: 'dark' !global;
  @content;

  $current: null !global;
}

@mixin prefers-light-scheme {
  @media (prefers-color-scheme: light) {
    @content;
  }
}

@mixin prefers-dark-scheme {
  @media (prefers-color-scheme: dark) {
    @content
  }
}