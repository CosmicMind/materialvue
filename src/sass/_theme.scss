/**
 * BSD 3-Clause License
 *
 * Copyright Â© 2023, Daniel Jonathan <daniel at cosmicmind dot com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its
 *    contributors may be used to endorse or promote products derived from
 *    this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES LOSS OF USE, DATA, OR PROFITS OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

@use 'sass:map';

@use './themes/material/light' as light;
@use './themes/material/dark' as dark;

$theme-light: light.$theme;
$theme-dark: dark.$theme;
$current: null;

@function tint($base, $color, $percentage) {
  @return mix($base, $color, $percentage);
}

@function shade($base, $color, $percentage) {
  @return mix($base, $color, $percentage);
}

@function style($key, $light: $theme-light, $dark: $theme-dark) {
  $theme: if($current == 'dark', $dark, $light);
  @return map.get($theme, $key);
}

@mixin themable($light, $dark) {
  $theme-light: $light !global;
  $theme-dark: $dark !global;
  @content;
}

@mixin preferred() {
  $current: 'light' !global;

  .theme-light &,
  .theme-dark .theme-light & {
    @content;
  }

  $current: 'dark' !global;

  .theme-dark &,
  .theme-light .theme-dark & {
    @content;
  }

  $current: null !global;
}

@mixin preferred-self() {
  $current: 'light' !global;

  @content;

  $current: 'dark' !global;

  &.theme-dark {
    @content;
  }

  $current: null !global;
}

@mixin prefers-light-scheme {
  @media (prefers-color-scheme: light) {
    @content;
  }
}

@mixin prefers-dark-scheme {
  @media (prefers-color-scheme: dark) {
    @content
  }
}